version: 2
defaults: &defaults
  docker:
#    - image: gcr.io/newprotectruben1/googlesdk:v1
    - image: google/cloud-sdk@sha256:126a49cfa2aa6e20d561fa14999bf657bc341efeba04939bd2f612bf843d12a6
#      auth:
#        username: _json_key
#        password: $GCLOUD_SERVICE_KEY
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Generate the full image fo the docker image
          command: |
            set -x
            if [ "{CIRCLE_BRANCH}" == "master" ]
            then
              DOCKER_IMAGE_TAG=v${CIRCLE_BUILD_NUM}
              echo "$DOCKER_IMAGE_NAME: $DOCKER_IMAGE_TAG" > full_docker_image_name
            else
              DOCKER_IMAGE_TAG=${CIRCLE_BRANCH}
              echo "angular-app:$DOCKER_IMAGE_TAG" > full_docker_image_name
            fi
      - run:
          name: Build Image
          command: |
            FULL_DOCKER_IMAGE_NAME=$(cat full_docker_image_name)
            docker build -t $FULL_DOCKER_IMAGE_NAME -f Dockerfile_SC .
      - run:
          name: Push Image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              FULL_DOCKER_IMAGE=$(cat full_docker_image_name)
              echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > gcloud-service-key.json
              gcloud auth activate-service-account --key-file gcloud-service-key.json
              gcloud --quiet auth configure-docker
              docker push $FULL_DOCKER_IMAGE
            else
              echo "Not master branch; skip image push.."
            fi
      - run:
          name: Test Local image
          command: |
            set -x
            FULL_DOCKER_IMAGE_NAME=$(cat full_docker_image_name)
            docker run -d -rm -p 8080:8080 -name angualar-app appropiate/curl --retry 10 -retry-conrefused http://localhost:8080
            if [ "${CIRCLE_BRANCH}" ] != "master" ]
              then
                cirlceci step halt
            fi
      - persist_to_workspace:
          root: .
          paths:
            - full_docker_image_name
  deploy:
    <<: *defaults
    steps:
      - run: |
          echo ${GCLOUD_SERVICE_KEY}

workflows:
  version: 2
  workflow:
    jobs:
      - build
      - deploy
