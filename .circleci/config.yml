version: 2
defaults: &defaults
  docker:
#    - image: gcr.io/newprotectruben1/googlesdk:v1
    - image: google/cloud-sdk@sha256:126a49cfa2aa6e20d561fa14999bf657bc341efeba04939bd2f612bf843d12a6
#      auth:
#        username: _json_key
#        password: $GCLOUD_SERVICE_KEY
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Generate the full image fo the docker image
          command: |
            set -x
            if [ "{CIRCLE_BRANCH}" == "master" ]
            then
              DOCKER_IMAGE_TAG=v${CIRCLE_BUILD_NUM}
              echo "$DOCKER_IMAGE_NAME: $DOCKER_IMAGE_TAG" > full_docker_image_name
            else
              DOCKER_IMAGE_TAG=${CIRCLE_BRANCH}
              echo "angular-app:$DOCKER_IMAGE_TAG" > full_docker_image_name
            fi
      - run:
          name: Build Image
          command: |
            FULL_DOCKER_IMAGE_NAME=$(cat full_docker_image_name)
            docker build -t $FULL_DOCKER_IMAGE_NAME -f Dockerfile_SC .
            echo $FULL_DOCKER_IMAGE_NAME
      - run:
          name: Push Image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              FULL_DOCKER_IMAGE=$(cat full_docker_image_name)
              echo $GCLOUD_SERVICE_KEY > gcloud-service-key.json
              gcloud auth activate-service-account --key-file gcloud-service-key.json
              gcloud --quiet auth configure-docker
              echo $FULL_DOCKER_IMAGE
            else
              echo "Not master branch; skip image push.."
            fi
      - run:
          name: Test Local image
          command: |
            set -x
            FULL_DOCKER_IMAGE_NAME=$(cat full_docker_image_name)
            docker run -d --rm -p 8080:8080 --name angular-app $FULL_DOCKER_IMAGE_NAME
            docker run --network container:angular-app appropriate/curl --retry 10 --retry-connrefused http://localhost:80
            if [ "${CIRCLE_BRANCH}" != "master" ]
              then
                circleci step halt
            fi
      - persist_to_workspace:
          root: .
          paths:
            - full_docker_image_name
  deploy:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace
      - run:
          name: Deploy
          command: |
            echo $GCLOUD_SERVICE_KEY > gcloud-service-key.json
            set -x
            gcloud auth activate-service-account --key-file gcloud-service-key.json
            gcloud --quiet config set project $GOOGLE_PROJECT_ID
            gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE
            EXISTING_CLUSTER=$(gcloud container clusters list --format="value(name)" --filter="name=$GOOGLE_CLUSTER_NAME")
            if [ "${EXISTING_CLUSTER}" != $GOOGLE_CLUSTER_NAME ]
            then
              # Create cluster if it doesn't already exist
              gcloud --quiet container clusters create $GOOGLE_CLUSTER_NAME --num-nodes=1
            else
              gcloud --quiet container clusters get-credentials $GOOGLE_CLUSTER_NAME
            fi
            FULL_DOCKER_IMAGE_NAME=$(cat workspace/full_docker_image_name)
            # Replace DOCKER_IMAGE_NAME placeholder in manifest with actual image name
            KUBE_CONFIG=$(cat /manifests/angular-test-cli-all-one.yml.template | sed "s|DOCKER_IMAGE_NAME|$FULL_DOCKER_IMAGE_NAME|g")
            echo "$KUBE_CONFIG" | kubectl apply -f -
            # wait for deployment to finish
            kubectl rollout status deployment/hiangular
            kubectl get pods

workflows:
  version: 2
  workflow:
    jobs:
      - build
      - deploy:
          requires:
            - build
